--In this SQL project, I used Spotify data from Kaggle and then used SQL to create a table and insert this info into it. 
Source(https://www.kaggle.com/datasets/equinxx/spotify-top-50-songs-in-2021?select=spotify_top50_2021.csv)

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

--Next, I inserted the Spotify Data .csv into the table and used SQL queries to answer specific questions about the data.

#1. What is the average danceability by artist and track?
SELECT artist_name, track_name, AVG(danceability)
FROM BIT_DB.Spotifydata GROUP BY artist_name, track_name;

#2. Who are the top 10 artists based on popularity?
SELECT artist_name, popularity FROM BIT_DB.Spotifydata
GROUP BY artist_name ORDER BY popularity desc LIMIT 10;

#3. Who is the artist with the longest song and what is the length?
SELECT artist_name, duration_ms FROM BIT_DB.Spotifydata ORDER BY duration_ms desc LIMIT 1;

#4. What are the top 10 most popular songs?
SELECT track_name, popularity FROM BIT_DB.Spotifydata ORDER BY popularity desc LIMIT 10;

#5. What's the average danceability for the 10 most popular songs?
SELECT AVG(danceability) FROM BIT_DB.Spotifydata WHERE popularity >= 92 LIMIT 10; 

#6. From the top 10 most popular songs, which one had the highest energy and what was its key?
SELECT track_name, energy, song_key FROM BIT_DB.Spotifydata
WHERE popularity >= 92 ORDER BY energy desc LIMIT 1;

